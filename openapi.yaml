openapi: 3.0.3
info:
  title: FeedzzTrab API
  description: API para gerenciar atribuições de tarefas no sistema FeedzzTrab, projetado para gerentes, líderes de equipe e programadores.
  version: 1.0.0
servers:
  - url: http://localhost:3000/api
    description: Servidor de desenvolvimento local
  - url: https://feedzztrab.example.com/api
    description: Servidor de produção (substitua pela sua URL hospedada)

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        user_id:
          type: integer
          example: 1
        username:
          type: string
          example: "programador1"
        email:
          type: string
          example: "programador1@exemplo.com"
        role:
          type: string
          enum: [admin, manager, team_leader, programmer]
          example: "programmer"
        created_at:
          type: string
          format: date-time
          example: "2025-03-22T10:00:00Z"
      required:
        - user_id
        - username
        - email
        - role

    Skill:
      type: object
      properties:
        skill_id:
          type: integer
          example: 1
        skill_name:
          type: string
          example: "Desenvolvimento Web"
      required:
        - skill_id
        - skill_name

    Job:
      type: object
      properties:
        job_id:
          type: integer
          example: 1
        description:
          type: string
          example: "Desenvolver um módulo de autenticação"
        created_by:
          type: integer
          example: 2
        created_at:
          type: string
          format: date-time
          example: "2025-03-22T10:00:00Z"
        status:
          type: string
          enum: [unassigned, assigned, completed]
          example: "unassigned"
      required:
        - job_id
        - description
        - created_by
        - status

    JobAssignment:
      type: object
      properties:
        assignment_id:
          type: integer
          example: 1
        job_id:
          type: integer
          example: 1
        assigned_to:
          type: integer
          example: 4
        assigned_by:
          type: integer
          example: 3
        start_time:
          type: string
          format: date-time
          nullable: true
          example: null
        end_time:
          type: string
          format: date-time
          nullable: true
          example: null
      required:
        - assignment_id
        - job_id
        - assigned_to
        - assigned_by

    Error:
      type: object
      properties:
        message:
          type: string
          example: "Acesso não autorizado"
      required:
        - message

security:
  - bearerAuth: []

paths:
  /users:
    post:
      summary: Criar um novo utilizador (apenas Admin)
      tags:
        - Utilizadores
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: "programador2"
                password:
                  type: string
                  example: "senha_segura123"
                email:
                  type: string
                  example: "programador2@exemplo.com"
                role:
                  type: string
                  enum: [admin, manager, team_leader, programmer]
                  example: "programmer"
              required:
                - username
                - password
                - email
                - role
      responses:
        '201':
          description: Utilizador criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '403':
          description: Proibido (não é admin)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users/{user_id}/skills:
    post:
      summary: Adicionar uma competência ao perfil de um programador (apenas Programador)
      tags:
        - Competências
      security:
        - bearerAuth: []
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
            example: 4
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                skill_id:
                  type: integer
                  example: 2
              required:
                - skill_id
      responses:
        '201':
          description: Competência adicionada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Skill'
        '403':
          description: Proibido (não é o programador)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /jobs:
    post:
      summary: Criar uma nova tarefa (apenas Gerente)
      tags:
        - Tarefas
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
                  example: "Corrigir bug na página inicial"
              required:
                - description
      responses:
        '201':
          description: Tarefa criada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        '403':
          description: Proibido (não é gerente)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    get:
      summary: Listar tarefas (Gerente vê as suas, Líder de Equipa vê todas)
      tags:
        - Tarefas
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de tarefas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Job'
        '403':
          description: Proibido (não é gerente nem líder de equipa)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /jobs/{job_id}:
    put:
      summary: Atualizar uma tarefa não atribuída (apenas Gerente)
      tags:
        - Tarefas
      security:
        - bearerAuth: []
      parameters:
        - name: job_id
          in: path
          required: true
          schema:
            type: integer
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
                  example: "Atualizar módulo de autenticação"
              required:
                - description
      responses:
        '200':
          description: Tarefa atualizada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        '403':
          description: Proibido (não é gerente ou tarefa já atribuída)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      summary: Eliminar uma tarefa não atribuída (apenas Gerente)
      tags:
        - Tarefas
      security:
        - bearerAuth: []
      parameters:
        - name: job_id
          in: path
          required: true
          schema:
            type: integer
            example: 1
      responses:
        '204':
          description: Tarefa eliminada com sucesso
        '403':
          description: Proibido (não é gerente ou tarefa já atribuída)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /assignments:
    post:
      summary: Atribuir uma tarefa a um programador (apenas Líder de Equipa)
      tags:
        - Atribuições
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                job_id:
                  type: integer
                  example: 1
                assigned_to:
                  type: integer
                  example: 4
              required:
                - job_id
                - assigned_to
      responses:
        '201':
          description: Tarefa atribuída com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobAssignment'
        '403':
          description: Proibido (não é líder de equipa)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflito (programador tem uma tarefa ativa)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /assignments/{assignment_id}:
    patch:
      summary: Atualizar horário de início/fim de uma atribuição (apenas Programador)
      tags:
        - Atribuições
      security:
        - bearerAuth: []
      parameters:
        - name: assignment_id
          in: path
          required: true
          schema:
            type: integer
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                start_time:
                  type: string
                  format: date-time
                  nullable: true
                  example: "2025-04-01T09:00:00Z"
                end_time:
                  type: string
                  format: date-time
                  nullable: true
                  example: "2025-04-01T17:00:00Z"
      responses:
        '200':
          description: Atribuição atualizada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobAssignment'
        '403':
          description: Proibido (não é programador)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'